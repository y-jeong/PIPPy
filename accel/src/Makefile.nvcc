
# Definition of MACROS

INSTALL=../
BINROOT=./
LIB = libgpu.a
SHELL=/bin/sh
CXX = g++
CXXFLAGS=
FC=gfortran
FCFLAGS=
LD = $(CXX)
AR = ar rcs
CPP = cpp -P -traditional

CUDA_CXX = nvcc -x cu
CUDA_CXXFLAGS = 

ARCH ?= polaris
include arch/$(ARCH)

# -- subset of src files with cuda kernels
CUDA_SRC = pm_cuda.cpp device_cuda.cpp
CUDA_SRC += pm_openmp.cpp device_openmp.cpp
CUDA_OBJ = $(CUDA_SRC:.cpp=.o)

CSRC = $(filter-out $(CUDA_SRC), $(wildcard *.cpp))
INC = $(wildcard *.h)
COBJ = $(CSRC:.cpp=.o)

FSRC = $(wildcard *.F)
MOD = $(FSRC:.F=.mod)
FOBJ = $(FSRC:.F=.o)

#
# -- target : 	Dependencies
# --		Rule to create target

$(LIB): $(COBJ) $(CUDA_OBJ) $(FOBJ) $(MOD)
	$(AR) $@ $(COBJ) $(CUDA_OBJ)

install: $(LIB)
	 mkdir -p $(INSTALL)/lib
	 mkdir -p $(INSTALL)/include
	 cp $(LIB) $(INSTALL)/lib
	 cp $(MOD) $(FOBJ) $(INSTALL)/include

####################################################################

$(COBJ): %.o: %.cpp
	$(CXX) $(CXXFLAGS) -c $<

$(FOBJ): %.o: %.F
	$(FC) $(FCFLAGS) -c $<

$(MOD): %.mod: %.F
	$(FC) $(FCFLAGS) -c $<

$(CUDA_OBJ): %.o: %.cpp
	$(CUDA_CXX) $(CUDA_CXXFLAGS) -c $< -o $@

#
# -- Remove *.o and *~ from the directory
clean:
	rm -f *.o *.mod *~ ./$(LIB)
	rm -rf $(EX).dSYM
#
# -- Remove *.o, *~, and executable from the directory
realclean:
	rm -f *.o *.mod *~ ./$(LIB)
	rm -rf $(EX).dSYM
	rm -f *.optrpt

#
# -- Simple dependencies

libgpu_fc_interface.mod : libgpu_fc_interface.F
libgpu_fc_interface.o : libgpu_fc_interface.F

libgpu.o : libgpu.cpp
libgpu.o : libgpu.h

pm_cuda.o : pm_cuda.cpp
pm_cuda.o : pm_cuda.h

device_cuda.o : device_cuda.cpp
device_cuda.o : device.h
device.o : device.h
